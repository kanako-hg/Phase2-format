{"ast":null,"code":"// import { useState } from \"react\";\n// import { createPortal } from \"react-dom\";\n// import Modal from \"./components/Modal\";\n\n// /* POINT createPortalの使い方\n// 第一引数: React の子要素としてレンダー可能なもの （要素、文字列、フラグメント、コンポーネントなど）\n// 第二引数: レンダー先のDOM要素\n// */\n\n// /* POINT createPortalはどんなときに使うか？\n// 子要素は親要素のスタイルによって表示に制限を受ける場合があります。\n// （overflow: hidden 、 z-index 、 width　など・・・ ）\n// それらの制限なく、子要素が親要素を「飛び出して」表示する必要があるときにcreatePortalを使うのが有効です。\n// モーダル、ポップアップ、トーストは使用の代表例です。\n// */\n// const ModalPortal = ({ children }) => {\n//   const target = document.querySelector(\".container.start\");\n//   return createPortal(children, target);\n// };\n// const Example = () => {\n//   const [modalOpen, setModalOpen] = useState(false);\n//   return (\n//     <div>\n//       <div className=\"container start\"></div>\n\n//       <button\n//         type=\"button\"\n//         onClick={() => setModalOpen(true)}\n//         disabled={modalOpen}\n//       >\n//         モーダルを表示する\n//       </button>\n//       {modalOpen && (\n//         <ModalPortal>\n//           <Modal handleCloseClick={() => setModalOpen(false)} />\n//         </ModalPortal>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Example;","map":{"version":3,"names":[],"sources":["/home/kanako/codevillage/Phase2-format/react-guide-material/react-guide-material/08_other_function/src/010_portals/start/Example.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { createPortal } from \"react-dom\";\r\n// import Modal from \"./components/Modal\";\r\n\r\n// /* POINT createPortalの使い方\r\n// 第一引数: React の子要素としてレンダー可能なもの （要素、文字列、フラグメント、コンポーネントなど）\r\n// 第二引数: レンダー先のDOM要素\r\n// */\r\n\r\n// /* POINT createPortalはどんなときに使うか？\r\n// 子要素は親要素のスタイルによって表示に制限を受ける場合があります。\r\n// （overflow: hidden 、 z-index 、 width　など・・・ ）\r\n// それらの制限なく、子要素が親要素を「飛び出して」表示する必要があるときにcreatePortalを使うのが有効です。\r\n// モーダル、ポップアップ、トーストは使用の代表例です。\r\n// */\r\n// const ModalPortal = ({ children }) => {\r\n//   const target = document.querySelector(\".container.start\");\r\n//   return createPortal(children, target);\r\n// };\r\n// const Example = () => {\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   return (\r\n//     <div>\r\n//       <div className=\"container start\"></div>\r\n\r\n//       <button\r\n//         type=\"button\"\r\n//         onClick={() => setModalOpen(true)}\r\n//         disabled={modalOpen}\r\n//       >\r\n//         モーダルを表示する\r\n//       </button>\r\n//       {modalOpen && (\r\n//         <ModalPortal>\r\n//           <Modal handleCloseClick={() => setModalOpen(false)} />\r\n//         </ModalPortal>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Example;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}